<?xml version="1.0"?>
<package xmlns="http://pear.php.net/dtd/package-2.0" xmlns:tasks="http://pear.php.net/dtd/tasks-1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.0" xsi:schemaLocation="http://pear.php.net/dtd/tasks-1.0 http://pear.php.net/dtd/tasks-1.0.xsd http://pear.php.net/dtd/package-2.0 http://pear.php.net/dtd/package-2.0.xsd">
  <name>event</name>
  <channel>pecl.php.net</channel>
  <summary>Provides interface to libevent library</summary>
  <description>
  This is an extension to efficiently schedule I/O, time and signal based
  events using the best I/O notification mechanism available for specific platform.
  This is a port of libevent to the PHP infrastructure.
  
  Version 1.0.0 introduces:
  * new OO API breaking backwards compatibility
  * support of libevent 2+ including HTTP, DNS, OpenSSL and the event listener.

  Note, event-1.0.0 and greater is not compatible with previous versions.
  </description>
  <lead>
    <name>Ruslan Osmanov</name>
    <user>osmanov</user>
    <email>osmanov@php.net</email>
    <active>yes</active>
  </lead>
  <date>2013-03-05</date>
  <!--{{{ Current version -->
  <version>
    <release>1.2.7</release>
    <api>1.3.1</api>
  </version>
  <stability>
    <release>beta</release>
    <api>beta</api>
  </stability>
  <license uri="http://www.php.net/license">PHP</license>
  <notes><![CDATA[
  Fix: possible memory access violations in EventBufferEvent input/output property handlers
  Change: Event::$timer_pending property removed; generic Event::$pending property added
  Fix: With OPT_LEAVE_SOCKETS_BLOCKING flag EventListener::__construct turned fd to non-blocking mode
  Fix: property and class HashTable's were not free'd in MSHUTDOWN
  Add: Event::$data property
  Fix: Event::__construct failed with Event::TIMEOUT flag
  Fix: memory leak in EventBuffer::readLine
  ]]></notes>
  <!--}}}-->
  <!--{{{ Contents -->
  <contents>
    <dir name="/">
      <file role="doc" name="CREDITS"/>
      <file role="doc" name="EXPERIMENTAL"/>
      <file role="doc" name="INSTALL.md"/>
      <file role="doc" name="README.md"/>
      <file role="src" name="config.m4"/>
      <file role="src" name="php_event.c"/>
      <file role="src" name="php_event.h"/>
      <dir name="classes">
        <file role="src" name="base.c"/>
        <file role="src" name="buffer.c"/>
        <file role="src" name="buffer_event.c"/>
        <file role="src" name="buffer_pos.c"/>
        <file role="src" name="dns.c"/>
        <file role="src" name="event.c"/>
        <file role="src" name="event_config.c"/>
        <file role="src" name="event_util.c"/>
        <file role="src" name="http.c"/>
        <file role="src" name="http_connection.c"/>
        <file role="src" name="listener.c"/>
        <file role="src" name="ssl_context.h"/>
        <file role="src" name="ssl_context.c"/>
      </dir>
      <dir name="examples">
        <file role="doc" name="buffer_proxy.php"/>
        <dir name="ssl-echo-server">
          <file role="doc" name="server.php"/>
        </dir>
        <file role="doc" name="eio.php"/>
        <file role="doc" name="fibonacci_buffer.php"/>
        <file role="doc" name="httpv0client.php"/>
        <file role="doc" name="httpv0client2.php"/>
        <file role="doc" name="listener.php"/>
        <file role="doc" name="misc.php"/>
        <file role="doc" name="signal.php"/>
        <file role="doc" name="timer.php"/>
        <file role="doc" name="uppercase_proxy.php"/>
      </dir>
      <dir name="src">
        <file role="src" name="common.h"/>
        <file role="src" name="fe.c"/>
        <file role="src" name="fe.h"/>
        <file role="src" name="pe.c"/>
        <file role="src" name="priv.h"/>
        <file role="src" name="structs.h"/>
        <file role="src" name="util.c"/>
        <file role="src" name="util.h"/>
      </dir>
      <dir name="tests">
        <file role="src" name="01-load.phpt"/>
        <file role="src" name="02-features.phpt"/>
        <file role="src" name="03-event-del.phpt"/>
        <file role="src" name="04-bevent-socket.phpt"/>
      </dir>
    </dir>
  </contents>
  <!--}}}-->
  <dependencies>
    <required>
      <php>
        <min>5.4.0</min>
      </php>
      <pearinstaller>
        <min>1.4.0a1</min>
      </pearinstaller>
    </required>
  </dependencies>
  <providesextension>event</providesextension>
  <extsrcrelease>
    <configureoption default="no" name="enable-event-debug" prompt="Enable internal debugging in event"/>
    <configureoption default="/usr" name="with-event-libevent-dir" prompt="libevent installation prefix"/>
    <configureoption default="yes" name="with-event-extra" prompt="Include libevent protocol-specific functionality support including HTTP, DNS, and RPC"/>
    <configureoption default="yes" name="with-event-openssl" prompt="Include libevent OpenSSL support"/>
    <configureoption default="no" name="with-openssl-dir" prompt="openssl installation prefix"/>
  </extsrcrelease>
  <!--{{{ changelog-->
  <changelog>
    <!--{{{ 1.2.7-beta-->
    <release>
      <version>
        <release>1.2.7</release>
        <api>1.3.1</api>
      </version>
      <stability>
        <release>beta</release>
        <api>beta</api>
      </stability>
      <license uri="http://www.php.net/license">PHP</license>
      <notes><![CDATA[
  Fix: possible memory access violations in EventBufferEvent input/output property handlers
  Change: Event::$timer_pending property removed; generic Event::$pending property added
  Fix: With OPT_LEAVE_SOCKETS_BLOCKING flag EventListener::__construct turned fd to non-blocking mode
  Fix: property and class HashTable's were not free'd in MSHUTDOWN
  Add: Event::$data property
  Fix: Event::__construct failed with Event::TIMEOUT flag
  Fix: memory leak in EventBuffer::readLine
  ]]></notes>
    </release>
    <!--}}}-->
    <!--{{{ 1.2.6-beta -->
    <release>
      <version>
        <release>1.2.6</release>
        <api>1.3.0</api>
      </version>
      <stability>
        <release>beta</release>
        <api>beta</api>
      </stability>
      <license uri="http://www.php.net/license">PHP</license>
      <notes><![CDATA[
      Fix: with OpenSSL turned off got error: undefined symbol: zim_EventUtil_sslRandPoll
      Add: implemented get_properties property handler(is called when one casts an object to array)
      Refact: removed memory alloc for empty property hashtables
      Fix: heap corruption caused by EventBufferEvent callbacks(thanks to Marco Schuster)
      Fix: continuous calls to EventBufferEvent::setCallbacks didn't free old fci/fcc(thanks to Marco Schuster)
      Fix: possible heap corruption in EventListener's callback
      Add: EventBase::resume method
      ]]></notes>
    </release>
    <!--}}}-->
    <!--{{{ 1.2.5-alpha -->
    <version>
      <release>1.2.5</release>
      <api>1.2.1</api>
    </version>
    <stability>
      <release>alpha</release>
      <api>alpha</api>
    </stability>
    <license uri="http://www.php.net/license">PHP</license>
    <notes><![CDATA[
  Fix: unneeded Z_ADDREF_P() calls in EventListener, EventBufferEvent constructors and factory methods
  Fix: EventListener cached file descriptor for all connections
  Change: EventBufferEvent enable/disable methods return bool now
  Change: instead of stream pass numeric file descriptor to EventListener's accept-connection callback
  Add: callbacks and the callback arg are now passed to EventBufferEvent::__construct as optional arguments
  ]]></notes>
    <!--}}}-->
    <!--{{{ 1.2.4-alpha -->
    <version>
      <release>1.2.4</release>
      <api>1.2.1</api>
    </version>
    <stability>
      <release>alpha</release>
      <api>alpha</api>
    </stability>
    <license uri="http://www.php.net/license">PHP</license>
    <notes><![CDATA[
  Fix: deleted redundant len argument of EventBuffer::readLine
  Fix: EventBuffer::readLine returned non-dup'd string. Caused bugs with pointers.
  ]]></notes>
    <!--}}}-->
    <!--{{{ 1.2.3-alpha -->
    <release>
      <version>
        <release>1.2.3</release>
        <api>1.2.0</api>
      </version>
      <stability>
        <release>alpha</release>
        <api>alpha</api>
      </stability>
      <license uri="http://www.php.net/license">PHP</license>
      <notes><![CDATA[
  Fix: build errors
  Fix: undefined symbol SSLv2_*_method when SL_OP_NO_SSLv2 defined
  ]]></notes>
    </release>
    <!--}}}-->
    <!--{{{ 1.2.0-alpha-->
    <release>
      <version>
        <release>1.2.0</release>
        <api>1.2.0</api>
      </version>
      <stability>
        <release>alpha</release>
        <api>alpha</api>
      </stability>
      <license uri="http://www.php.net/license">PHP</license>
      <notes><![CDATA[
  Fix: non-static zend_always_inline function failed to compile with some (non-zts) php setups
  Change: static EventBuffer::addBuffer made non-static with one argument
  Add: EventBuffer expand, prepend, prependBuffer, drain, copyout, readLine, search,
  setPosition methods
  Add: EventBufferPosition class
  Fix: configure error in FreeBSD
  Add: OpenSSL support: EventBufferEvent methods: sslFilter, sslSocket, sslError, sslRenegotiate; EventSslContext class
  Add: EventBuffer::pullup method
  ]]></notes>
    </release>
    <!--}}}-->
    <!--{{{ 1.1.1-devel -->
    <release>
      <version>
        <release>1.1.1</release>
        <api>1.1.0</api>
      </version>
      <stability>
        <release>devel</release>
        <api>devel</api>
      </stability>
      <license uri="http://www.php.net/license">PHP</license>
      <notes><![CDATA[
  Fix: the installer failed to determine location of src/common.h
  ]]></notes>
    </release>
    <!--}}}-->
    <!--{{{ 1.1.0-devel -->
    <release>
      <version>
        <release>1.1.0</release>
        <api>1.1.0</api>
      </version>
      <stability>
        <release>devel</release>
        <api>devel</api>
      </stability>
      <license uri="http://www.php.net/license">PHP</license>
      <notes><![CDATA[
  Procedural API converted to OOP API
  ]]></notes>
    </release>
    <!--}}}-->
    <!--{{{ 1.0.1-devel -->
    <release>
      <version>
        <release>1.0.1</release>
        <api>1.0.0</api>
      </version>
      <stability>
        <release>devel</release>
        <api>devel</api>
      </stability>
      <license uri="http://www.php.net/license">PHP</license>
      <notes><![CDATA[
    Fix: crash due to destruction of the internal bufferevent buffers (synced with oop branch)
    Fix: extra memory consumption caused by continuous calls to bufferevent_get_input/_output
    Fix: memory violation while parsing event_config_set_max_dispatch_interval parameters
  ]]></notes>
    </release>
    <!--}}}-->
    <!--{{{ 1.0.0-devel -->
    <release>
      <date>2013-01-19</date>
      <version>
        <release>1.0.0</release>
        <api>1.0.0</api>
      </version>
      <stability>
        <release>devel</release>
        <api>devel</api>
      </stability>
      <license uri="http://www.php.net/license">PHP</license>
      <notes><![CDATA[
      Libevent 2+ support added
        ]]></notes>
    </release>
    <!--}}}-->
    <!--{{{ Obsolete releases-->
    <release>
      <date>2004-12-16</date>
      <lead>
        <name>Wez Furlong</name>
        <user>wez</user>
        <email>wez@php.net</email>
        <active>yes</active>
      </lead>
      <version>
        <release>0.9.1</release>
        <api>0.9.1</api>
      </version>
      <stability>
        <release>beta</release>
        <api>beta</api>
      </stability>
      <license uri="http://www.php.net/license">PHP</license>
      <notes><![CDATA[
      Added event_timeout() function for easily scheduling a callback after a certain
      period of time.  The timeout may be persistent to make the callback a recurrent
      event.

      Fixed an issue with timercmp() on windows that caused a busy wait when the
      scheduler could have performed a sleep.

      Windows scheduling engine now also processes the message queue while
      waiting; useful for COM/GUI based scripts.

      Fixed build for threaded systems with real signals.

      Supports epoll(4), poll(2) and select(2) IO notification engines.
      Support for /dev/poll and kqueue is pending.

      On Windows, currently only sockets can participate in the IO notification engine.
      ]]></notes>
      <deps>
        <dep type="php" rel="ge" version="4.3.0"/>
      </deps>
    </release>
    <!--}}}-->
  </changelog>
  <!--}}}-->
</package>
<!-- vim: set et sts=2 ts=2 sw=2 fdm=marker: -->
